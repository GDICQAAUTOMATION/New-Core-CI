{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-10-23T09:00:19.921Z",
    "end": "2024-10-23T09:00:41.649Z",
    "duration": 21728,
    "testsRegistered": 5,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 4,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "57aa03b8-b8af-47b7-bbd4-b2747df753ab",
      "title": "",
      "fullFile": "cypress\\e2e\\Customer Creation-negative.cy.js",
      "file": "cypress\\e2e\\Customer Creation-negative.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a56b9f04-ee8c-483a-9cb7-dcadcde27341",
          "title": "GDIC CI Motor test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new customer successfully",
              "fullTitle": "GDIC CI Motor test should create a new customer successfully",
              "timedOut": null,
              "duration": 155,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Click on the buttons to proceed\ncy.get('.card-toolbar > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\n// Open the customer type dropdown menu\ncy.get('ng-select[formcontrolname=\"customerType\"]').click();\n// Wait for the dropdown options to be visible and select \"personal\"\ncy.get('.ng-dropdown-panel .ng-option').contains('PERSONAL').click({\n  force: true\n});\n// Verify the selection\ncy.get('ng-select[formcontrolname=\"customerType\"] .ng-value-container').should('contain', 'PERSONAL');\n// Fill in the customer form fields\ncy.get('form.ng-untouched > #required-fields > :nth-child(2) > .input-group > .form-control').type('Tamanna Islam');\ncy.get('form.ng-untouched > #required-fields > :nth-child(3) > .input-group > .form-control').type('Jhumur');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(5) > .input-group > .form-control').type('01538677800');\ncy.get(':nth-child(17) > .customer__edit__modal > .modal-content > app-add-customer-modal > .modal__control > .modal-body > .ng-invalid.ng-touched > #required-fields > :nth-child(16) > .input-group > .form-control').type('tamanna123@example.com');\ncy.get('form.ng-dirty > #required-fields > :nth-child(7) > .input-group > .form-control').type('Dhaka-1216');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(8)').type('Komilla');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(9) > .input-group > .form-control').type('9112101148');\n// Gender selection\ncy.get('form.ng-dirty > #required-fields > :nth-child(6) > .select-group > .ng-select > .ng-select-container > .ng-value-container > .ng-input').click();\ncy.get('.ng-option').contains('Female').click();\n// Save the customer\ncy.get('form.ng-dirty > .modal-footer > .btn-primary').click();\n// Wait for the confirmation modal to appear and click the primary button\ncy.get('.confirm__modal__content > .btn-primary').should('be.visible').click();\n// Click the \"OK\" button in the confirmation modal\ncy.get('.confirm__modal__content > .btn.btn-primary').contains('OK').should('be.visible').click();\n// Verify the customer was added\n// Uncomment and adjust based on your application's behavior\n// cy.get('.notification-message').should('contain', 'Customer Created successfully');",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'currentTest')\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `GDIC CI Motor test`",
                "estack": "TypeError: Cannot read properties of undefined (reading 'currentTest')\n\nBecause this error occurred during a `after each` hook we are skipping the remaining tests in the current suite: `GDIC CI Motor test`\n    at Context.eval (webpack://cypress-project/./cypress/e2e/Customer Creation-negative.cy.js:168:15)",
                "diff": null
              },
              "uuid": "b794c6b2-2bdc-4a1a-943f-44aecdb7811f",
              "parentUUID": "a56b9f04-ee8c-483a-9cb7-dcadcde27341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an error when fields are empty",
              "fullTitle": "GDIC CI Motor test should show an error when fields are empty",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.card-toolbar > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\n// Attempt to save the customer with empty fields\ncy.get('form.ng-dirty > .modal-footer > .btn-primary').click();\n// Check for error messages\ncy.get('.error-message').should('be.visible').and('contain', 'All fields are required');\ncy.screenshot('Empty Fields Error'); // Log the error",
              "err": {},
              "uuid": "38dd59d8-f82f-4c04-9791-c414511ae1f5",
              "parentUUID": "a56b9f04-ee8c-483a-9cb7-dcadcde27341",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should show an error when phone number is invalid",
              "fullTitle": "GDIC CI Motor test should show an error when phone number is invalid",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.card-toolbar > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\n// Fill in valid details but invalid phone number\ncy.get('form.ng-untouched > #required-fields > :nth-child(2) > .input-group > .form-control').type('Tamanna Islam');\ncy.get('form.ng-untouched > #required-fields > :nth-child(3) > .input-group > .form-control').type('Jhumur');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(5) > .input-group > .form-control').type('InvalidPhoneNumber'); // Invalid phone\ncy.get(':nth-child(17) > .customer__edit__modal > .modal-content > app-add-customer-modal > .modal__control > .modal-body > .ng-invalid.ng-touched > #required-fields > :nth-child(16) > .input-group > .form-control').type('tamanna123@example.com');\ncy.get('form.ng-dirty > #required-fields > :nth-child(7) > .input-group > .form-control').type('Dhaka-1216');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(8)').type('Komilla');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(9) > .input-group > .form-control').type('9112101148');\n// Gender selection\ncy.get('form.ng-dirty > #required-fields > :nth-child(6) > .select-group > .ng-select > .ng-select-container > .ng-value-container > .ng-input').click();\ncy.get('.ng-option').contains('Female').click();\n// Attempt to save the customer\ncy.get('form.ng-dirty > .modal-footer > .btn-primary').click();\n// Check for error message\ncy.get('.error-message').should('be.visible').and('contain', 'Invalid phone number format');\ncy.screenshot('Invalid Phone Number Error'); // Log the error",
              "err": {},
              "uuid": "5e6e0c4b-99ff-42c3-a27d-7adbe92ad817",
              "parentUUID": "a56b9f04-ee8c-483a-9cb7-dcadcde27341",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should show an error when email is invalid",
              "fullTitle": "GDIC CI Motor test should show an error when email is invalid",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.card-toolbar > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\n// Fill in valid details but invalid email\ncy.get('form.ng-untouched > #required-fields > :nth-child(2) > .input-group > .form-control').type('Tamanna Islam');\ncy.get('form.ng-untouched > #required-fields > :nth-child(3) > .input-group > .form-control').type('Jhumur');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(5) > .input-group > .form-control').type('01538677800');\ncy.get(':nth-child(17) > .customer__edit__modal > .modal-content > app-add-customer-modal > .modal__control > .modal-body > .ng-invalid.ng-touched > #required-fields > :nth-child(16) > .input-group > .form-control').type('invalidEmail'); // Invalid email\ncy.get('form.ng-dirty > #required-fields > :nth-child(7) > .input-group > .form-control').type('Dhaka-1216');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(8)').type('Komilla');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(9) > .input-group > .form-control').type('9112101148');\n// Gender selection\ncy.get('form.ng-dirty > #required-fields > :nth-child(6) > .select-group > .ng-select > .ng-select-container > .ng-value-container > .ng-input').click();\ncy.get('.ng-option').contains('Female').click();\n// Attempt to save the customer\ncy.get('form.ng-dirty > .modal-footer > .btn-primary').click();\n// Check for error message\ncy.get('.error-message').should('be.visible').and('contain', 'Invalid email format');\ncy.screenshot('Invalid Email Error'); // Log the error",
              "err": {},
              "uuid": "70f1c8a0-b4d2-4d95-8153-647a3cc17c26",
              "parentUUID": "a56b9f04-ee8c-483a-9cb7-dcadcde27341",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should show an error when gender is not selected",
              "fullTitle": "GDIC CI Motor test should show an error when gender is not selected",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.card-toolbar > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\ncy.get('[style=\"align-items: center;\"] > .btn').click();\n// Fill in valid details without selecting gender\ncy.get('form.ng-untouched > #required-fields > :nth-child(2) > .input-group > .form-control').type('Tamanna Islam');\ncy.get('form.ng-untouched > #required-fields > :nth-child(3) > .input-group > .form-control').type('Jhumur');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(5) > .input-group > .form-control').type('01538677800');\ncy.get(':nth-child(17) > .customer__edit__modal > .modal-content > app-add-customer-modal > .modal__control > .modal-body > .ng-invalid.ng-touched > #required-fields > :nth-child(16) > .input-group > .form-control').type('tamanna123@example.com');\ncy.get('form.ng-dirty > #required-fields > :nth-child(7) > .input-group > .form-control').type('Dhaka-1216');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(8)').type('Komilla');\ncy.get('.ng-invalid.ng-dirty > #required-fields > :nth-child(9) > .input-group > .form-control').type('9112101148');\n// Attempt to save the customer without selecting gender\ncy.get('form.ng-dirty > .modal-footer > .btn-primary').click();\n// Check for error message\ncy.get('.error-message').should('be.visible').and('contain', 'Gender selection is required');\ncy.screenshot('No Gender Selection Error'); // Log the error",
              "err": {},
              "uuid": "ba8eb2cc-bae1-40c6-b22f-4de55ea9e355",
              "parentUUID": "a56b9f04-ee8c-483a-9cb7-dcadcde27341",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b794c6b2-2bdc-4a1a-943f-44aecdb7811f"
          ],
          "pending": [],
          "skipped": [
            "38dd59d8-f82f-4c04-9791-c414511ae1f5",
            "5e6e0c4b-99ff-42c3-a27d-7adbe92ad817",
            "70f1c8a0-b4d2-4d95-8153-647a3cc17c26",
            "ba8eb2cc-bae1-40c6-b22f-4de55ea9e355"
          ],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}